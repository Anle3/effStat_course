"0",""
"0","# define grid ####"
"0","feat <- c(""bm05"", "".trt"")"
"0",""
"0","n_grid <- 10"
"0",""
"0","#create range for bm05"
"0","bm05_range <- data_prep %>%"
"0","  dplyr::pull(bm05) %>%"
"0","  range()"
"0",""
"0","bm05_grid <-"
"0","  seq(from = bm05_range[1],"
"0","      to = bm05_range[2],"
"0","      length.out = n_grid)"
"0",""
"0","#get trt levels"
"0","trt_grid <- data_prep %>%"
"0","  dplyr::pull(.trt) %>%"
"0","  levels()"
"0",""
"0",""
"0","# replace corresponding feature values with grid values"
"0","data_sets <-"
"0","  tidyr::expand_grid(bm05 = bm05_grid, .trt = trt_grid, data_prep %>% select(-c(bm05, .trt)))"
"0",""
"0","# calculate predictions for specified time points"
"0",""
"0","preds <-"
"0","  ranger:::predict.ranger(rf_model, data = data_sets)$survival %>%"
"0","  tibble::as_tibble() %>%"
"0","  dplyr::select(all_of(time_points))"
"1","Aggregating predictions.."
"1"," Progress: "
"1","88"
"1","%. Estimated remaining time: "
"1","4 seconds"
"1","."
"1","
"
"0","#merge predictions with data set and calculate 2D PDPs (average (survival probability) for each feature combination value per timepoint)"
"0","pdp_data  <- data_sets %>% bind_cols(preds) %>%"
"0","  filter(bm05 %in% bm05_grid) %>%"
"0","  pivot_longer("
"0","    c(colnames(preds)),"
"0","    names_to = ""time_id"","
"0","    values_to = "".values"""
"0","  )  %>% mutate(time_id = stringr::str_replace(time_id, ""V"", """") %>% as.numeric()) %>%"
"0","  group_by(bm05, .trt, time_id) %>% summarise(.value = mean(.values))"
"1","[38;5;232m`summarise()` has grouped output by 'bm05', '.trt'. You can override using the `.groups` argument.[39m
"
"0","#Uncomment next line to save the outcome"
"0","#qs::qsave(pdp_data, here::here(""Data"", ""bm05_trt_int_pdp_preds.qs""))"
