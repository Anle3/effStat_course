"0",""
"0",""
"0","# Introducing missing values in the data set"
"0",""
"0","# Set a seed for reproducibility"
"0","set.seed(123)"
"0",""
"0","# Create a copy of the dataset"
"0","dataBM_with_na <- dataBM"
"0",""
"0","# Define the proportion of missing values to introduce"
"0","proportion_missing <- 0.005  # 0.5% missing values"
"0",""
"0","# Calculate the number of missing values to introduce"
"0","n_missing <- round(proportion_missing * nrow(dataBM_with_na) * ncol(dataBM_with_na))"
"0",""
"0","# Randomly select indices for missing values"
"0","missing_indices <- sample(1:(nrow(dataBM_with_na) * ncol(dataBM_with_na)), n_missing)"
"0",""
"0","# Introduce NA values systematically"
"0","for (index in missing_indices) {"
"0","  row <- (index - 1) %/% ncol(dataBM_with_na) + 1"
"0","  col <- (index - 1) %% ncol(dataBM_with_na) + 1"
"0","  dataBM_with_na[row, col] <- NA"
"0","}"
"0",""
"0","# for our demo we will assume that we won't do any imputation on the outcomes and treatment information"
"0","# therefore, we need to remove missing values on these variables"
"0",""
"0","dataBM_with_na <- dataBM_with_na %>% "
"0","  filter(!is.na(.trt), !is.na(.time), !is.na(.status))"
"0",""
"0","# View the first few rows of the modified dataset"
"0","#head(dataBM_with_na)"
"0",""
"0",""
"0","# creating also other categorical variables bm07 and bm09"
"0",""
"0","# data <- dataBM_with_na %>% "
"0","#   dplyr::mutate(bm07 = ifelse(bm07 < -1,          # # below -1 y otherwise N"
"0","#                               ""Y"", "
"0","#                               ""N""),"
"0","#                 bm09 = ifelse(bm09 > 1,          # # above 1 y otherwise N"
"0","#                               ""Y"", "
"0","#                               ""N"")) %>% "
"0","#   mutate(bm07 = as.factor(bm07),"
"0","#          bm09 = as.factor(bm09),"
"0","#          .trt = as.factor(.trt))"
"0",""
"0","data <- dataBM_with_na %>% "
"0","  mutate(.trt = as.factor(.trt))"
"0","# adding .id column"
"0","data <- tibble::rownames_to_column(data, "".id"") "
"0",""
"0","data <- data%>% "
"0","  mutate(.id = paste0(""id_"", .id))"
"0",""
"0",""
